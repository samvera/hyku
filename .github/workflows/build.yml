name: Build and push docker image
on:
  workflow_dispatch:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: samvera/hyku

jobs:
  build:
    strategy:
      matrix:
        component: ["solr", "base", "web", "worker"]
        os: ["ubuntu-latest", "ubuntu-24.04-arm"]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    permissions: write-all
    steps:
      - name: Set env
        run: echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Downcase repo
        run: echo "REPO_LOWER=${REPO,,}" >> $GITHUB_ENV
        env:
          REPO: "${{ github.repository }}"
      - name: Set release tag
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "RELEASE_TAG=prerelease" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          fi
      - name: Set platform from matrix
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "PLATFORM_TAG=amd64" >> $GITHUB_ENV
          else
            echo "PLATFORM_TAG=arm64" >> $GITHUB_ENV
          fi
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Github Container Login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.component }} on ${{ matrix.os }}
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/${{ env.PLATFORM_TAG }}
          target: hyku-${{ matrix.component }}
          cache-from: |
            type=registry,ref=ghcr.io/samvera/hyku/${{ matrix.component }}:latest
          cache-to: type=inline
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.component }}:${{ env.TAG }}-${{ env.PLATFORM_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.component }}:${{ github.ref_name }}-${{ env.PLATFORM_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.component }}:${{ env.RELEASE_TAG }}-${{ env.PLATFORM_TAG }}
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Downcase repo
        run: echo "REPO_LOWER=${REPO,,}" >> $GITHUB_ENV
        env:
          REPO: "${{ github.repository }}"
      - name: Set release tag
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "RELEASE_TAG=prerelease" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          fi
      - name: Github Container Login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multiarch manifests
        run: |
          for component in base solr web worker; do
            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.TAG }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.TAG }}-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.TAG }}-arm64

            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.RELEASE_TAG }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.RELEASE_TAG }}-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ env.RELEASE_TAG }}-arm64

            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ github.ref_name }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ github.ref_name }}-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$component:${{ github.ref_name }}-arm64
          done
